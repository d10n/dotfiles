#!/bin/bash
# Execute this script, or run individual lines you want. Don't symlink this to ~/.gitconfig.
set -x

# NeoBundle makes vim bork out when run as vi (which is git default)
#git config --global core.editor $(which vim)

# Find the branching point http://stackoverflow.com/a/4991675
git config --global alias.oldest-ancestor '!''bash -c '\''diff --old-line-format= --new-line-format= <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | head -1'\'' -'

# Pretty log graph
git config --global alias.prettyLogGraph "log --graph --all --format=format:'%C(auto)%h - (%cr) %d %s %C(yellow)%cn%C(reset)' --abbrev-commit --date=relative"

# Sort branch by date
git config --global alias.bs $'for-each-ref --sort=committerdate refs/heads/ --format="%(committerdate:relative)\t%(refname:short) %(color:red)%(subject) %(color:blue)%(authorname)"'

# Short log
git config --global alias.l '!'"git --no-pager log --graph --format='%C(auto)%h%C(reset) - %cr %d %C(red)%s%C(reset) %C(blue)%cn%C(reset)' -5"

# Short status
git config --global alias.s "status -s"

# More readable diff
git config --global alias.d "diff --patience"

# Diff staged
git config --global alias.ds "diff --patience --staged"

# Show branches
git config --global alias.b "branch"

# Update both branches and tags
git config --global alias.f '!'"printf 'branches: '; git fetch --all --prune; printf 'tags: ';  git fetch --all --prune --tags"

# Add color to git output
git config --global color.ui auto

# Push only the current branch
git config --global push.default current

# Show the original code in merge conflicts
git config --global merge.conflictstyle diff3

# Show other changes when doing git pull --rebase
git config --global rebase.stat true

# Enable git rerere
git config --global rerere.enabled true

# Show the patch by default with git stash show
git config --global stash.showPatch true

# Automatically stash and unstash before and after a rebase
git config --global rebase.autoStash true

# Show ref names in git log
git config --global log.decorate full

# Show all untracked files in git status, not just root directories
git config --global status.showUntrackedFiles all

# Verify transferred objects in exchange for slower transfer
git config --global transfer.fsckObjects true

# easy git instaweb
git config --global instaweb.local true
git config --global instaweb.httpd webrick

# Update sandbox branch
# Old, but maybe a useful reference for shell functions in git aliases
# * origin/master is merged into your branch
# * your branch is pushed to the sandbox
#git config --global alias.update-sandbox '!updatesandbox() ( set -euo pipefail; if [[ "$#" -ne 1 ]]; then echo $'\''Usage: git update-sandbox <sandbox-name>\nExample: git update-sandbox pear'\''; exit 1; fi; set -x; git fetch; git merge origin/master; git push origin "HEAD:$1" || { set +x; echo "Force push required. Press enter to continue or ctrl+c to abort: "; read; set -x; git push --force origin "HEAD:$1"; } ); updatesandbox'

